#include "RISCVMIR.hpp"
#include "MagicEnum.hpp"

RISCVMOperand*& RISCVMIR::GetOperand(int ind){
    assert(0<=ind&&ind<operands.size()&&"Range Assertion");
    return operands[ind];
}

void RISCVMIR::AddOperand(RISCVMOperand* op){
    operands.push_back(op);
}

void RISCVMIR::printfull(){
    std::cout<<"\t"<<magic_enum::enum_name(opcode)<<" ";
    for(int i=0;i<operands.size();i++){
        operands[i]->print();
        if(i!=operands.size()-1)
            std::cout<<", ";
    }
    std::cout<<"\n";
}

std::vector<std::unique_ptr<RISCVFrameObject>>& RISCVFunction::GetFrameObjects(){
    return frame;
}

RISCVBasicBlock::RISCVBasicBlock(std::string _name):NamedMOperand(riscv_none,_name){}

RISCVFunction::RISCVFunction(Function* _func):RISCVGlobalObject(_func->GetType(),_func->GetName()),func(_func){}

void RISCVBasicBlock::printfull(){
    NamedMOperand::print();
    std::cout<<":\n\t";
    for(auto minst:*this)
        minst->printfull();
}

/// @todo the entry bb, or prologue bb will be generated by RISCVFunction after RA, and will be named as entry?
void RISCVFunction::printfull(){
    NamedMOperand::print();
    std::cout<<":\n";
    for(auto mbb:*this){
        mbb->printfull();
        if(mbb!=this->back())
            std::cout<<"\n";
    }
}